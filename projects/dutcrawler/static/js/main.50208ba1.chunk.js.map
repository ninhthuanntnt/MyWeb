{"version":3,"sources":["actions/index.js","const/Responsive.js","components/Header.js","components/Home.js","components/Notification.js","components/Score.js","components/Schedule.js","components/Page403.js","components/Spinner.js","App.js","serviceWorker.js","reducers/notification.js","reducers/score.js","reducers/schedule.js","reducers/login.js","reducers/loading.js","reducers/index.js","index.js","assets/images/Calendar.jpg","assets/images/score.png","assets/images/notification.png","const/ActionType.js"],"names":["fetchLoginedData","data","type","FETCH_LOGINED_DATA","fetchScore","FETCH_SCORE","fetchSchedule","FETCH_SCHEDULE","fetchNotification","FETCH_NOTIFICATION","Desktop","children","useMediaQuery","minWidth","MobileAndTablet","maxWidth","Header","props","changeInputData","event","target","setState","name","value","submitLoginInfo","login","state","username","password","handleHideLogin","handleShowLogin","isShowedLogin","errorMessage","isExistToken","undefined","this","token","trim","loginModal","Modal","show","onHide","closeButton","Title","Body","Form","Group","controlId","Label","Control","onChange","Text","className","Footer","Button","variant","onClick","Navbar","sticky","expand","Brand","as","Link","to","Row","ariant","logout","Toggle","aria-controls","Collapse","id","Nav","inline","InputGroup","FormControl","placeholder","Append","React","Component","connect","loginedData","dispatch","trackPromise","Axios","method","url","SERVER_DOMAIN","then","res","CLEAR_LOGINED_DATA","Home","Container","fluid","Col","sm","xs","md","Card","style","width","height","Img","src","caledarImage","scoreImage","notiImage","changeSelection","dataset","loadNotification","page","loadFirstPage","loadLastPage","loadPrevPage","loadNextPage","isLoading","listNotification","notifications","map","item","index","key","date","title","dangerouslySetInnerHTML","__html","content","ListGroup","Item","action","active","data-type","Pagination","First","Prev","Next","Last","pattern","Score","selectSemester","curSemester","innerText","getSemesterCode","indexOf","prefixType","substring","subfix","renderListDetailedScores","curSemesterCode","score","detailedScores","filter","code","subject","credit","score1","score2","score3","score4","score5","score6","score7","score8","score9","renderTotalScore","gettedCredit","gettedScore1","totalScores","el","totalCredit","semester","restCredit","resultType","activityScore","length","listSemester","Dropdown","DropdownButton","Table","hover","responsive","scope","loadScore","headers","localStorage","getItem","withCredentials","Schedule","loadSchedule","listSchedule","schedule","tuition","clc","lecturer","studyingWeek","colSpan","Page403","CustomSpinner","usePromiseTracker","promiseInProgress","Spinner","animation","App","exact","path","Notification","loadDataFromLocal","additionalData","Boolean","window","location","hostname","match","require","initState","class","renderListSemester","userClass","startYear","endYear","currentDate","Date","currentYear","getFullYear","push","pop","getMonth","combineReducers","scores","s","setItem","START_LOADING","STOP_LOADING","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports","GET_NOTIFICATION"],"mappings":"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","file":"static/js/main.50208ba1.chunk.js","sourcesContent":["import { FETCH_NOTIFICATION, FETCH_SCORE, FETCH_SCHEDULE, FETCH_LOGINED_DATA, CLEAR_LOGINED_DATA, SERVER_DOMAIN } from \"../const/ActionType\"\r\nimport Axios from \"axios\"\r\nimport { trackPromise } from \"react-promise-tracker\"\r\n\r\nexport const loadNotification = (type, page) => {\r\n    return (dispatch) => {\r\n        trackPromise(\r\n            Axios({\r\n                method: 'GET',\r\n                url: `${SERVER_DOMAIN}/api/notifications?notiType=${type}&pageNumber=${page}`\r\n            }).then(res => {\r\n                dispatch(fetchNotification(res.data));\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nexport const login = (username, password) => {\r\n    return (dispatch) => {\r\n        trackPromise(\r\n            Axios({\r\n                method: 'POST',\r\n                url: `${SERVER_DOMAIN}/api/login`,\r\n                data: {\r\n                    username,\r\n                    password\r\n                }\r\n            }).then(res => {\r\n                dispatch(fetchLoginedData(res.data));\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nexport const loadScore = () => {\r\n    return (dispatch) => {\r\n        trackPromise(\r\n            Axios({\r\n                method: \"GET\",\r\n                url: `${SERVER_DOMAIN}/api/score`,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"token\")\r\n                },\r\n                withCredentials: true\r\n            }).then(res => {\r\n                dispatch(fetchScore(res.data));\r\n            })\r\n        );\r\n    }\r\n}\r\nexport const loadSchedule = (type) => {\r\n    return (dispatch) => {\r\n        trackPromise(\r\n            Axios({\r\n                method: \"GET\",\r\n                url: `${SERVER_DOMAIN}/api/schedule?type=${type}`,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"token\")\r\n                },\r\n                withCredentials: true\r\n            }).then(res => {\r\n                dispatch(fetchSchedule(res.data));\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nexport const fetchLoginedData = (data) => {\r\n    return {\r\n        type: FETCH_LOGINED_DATA,\r\n        data\r\n    }\r\n}\r\n\r\nexport const loadDataFromLocal = () => {\r\n    let data = {\r\n        token: localStorage.getItem(\"token\"),\r\n        additionalData: localStorage.getItem(\"class\")\r\n    }\r\n    return dispatch => dispatch(fetchLoginedData(data));\r\n}\r\n\r\nexport const fetchScore = (data) => {\r\n    return {\r\n        type: FETCH_SCORE,\r\n        data\r\n    }\r\n}\r\n\r\nexport const fetchSchedule = (data) => {\r\n    return {\r\n        type: FETCH_SCHEDULE,\r\n        data: data\r\n    }\r\n}\r\nexport const logout = () => {\r\n    return {\r\n        type: CLEAR_LOGINED_DATA\r\n    }\r\n}\r\n\r\nexport const fetchNotification = (data) => {\r\n    return {\r\n        type: FETCH_NOTIFICATION,\r\n        data: data\r\n    }\r\n}","import { useMediaQuery } from 'react-responsive'\r\n\r\nexport const Desktop = ({ children }) => {\r\n    const isDesktop = useMediaQuery({ minWidth: 992 })\r\n    return isDesktop ? children : null\r\n}\r\nexport const Tablet = ({ children }) => {\r\n    const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 991 })\r\n    return isTablet ? children : null\r\n}\r\nexport const Mobile = ({ children }) => {\r\n    const isMobile = useMediaQuery({ maxWidth: 767 })\r\n    return isMobile ? children : null\r\n}\r\nexport const MobileAndTablet = ({ children }) => {\r\n    const isMobile = useMediaQuery({ maxWidth: 991 })\r\n    return isMobile ? children : null\r\n}\r\n\r\nexport const Default = ({ children }) => {\r\n    const isNotMobile = useMediaQuery({ minWidth: 768 })\r\n    return isNotMobile ? children : null\r\n}","\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { login, logout } from '../actions';\r\nimport { connect } from 'react-redux';\r\nimport { Navbar, Nav, Form, FormControl, Button, Modal, InputGroup, Row } from 'react-bootstrap';\r\nimport { Desktop, MobileAndTablet } from '../const/Responsive';\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            errorMessage: null,\r\n            isShowedLogin: false\r\n        }\r\n    }\r\n\r\n    changeInputData = (event) => {\r\n        let target = event.target;\r\n\r\n        this.setState({\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    submitLoginInfo = () => {\r\n        this.props.login(this.state.username, this.state.password);\r\n        this.handleHideLogin();\r\n    }\r\n\r\n    handleShowLogin = () => {\r\n        this.setState({\r\n            isShowedLogin: true\r\n        });\r\n    }\r\n\r\n    handleHideLogin = () => {\r\n        this.setState({\r\n            username: \"\",\r\n            password: \"\",\r\n            isShowedLogin: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let isExistToken = (\r\n            this.props.token !== undefined &&\r\n            this.props.token !== null &&\r\n            this.props.token.trim() !== \"\"\r\n        ) ? true : false;\r\n\r\n        let loginModal = (isExistToken) ? \"\" : (\r\n            <Modal show={this.state.isShowedLogin} onHide={this.handleHideLogin}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Đăng nhập</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Mã số sinh viên</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                onChange={this.changeInputData}\r\n                                value={this.state.username}\r\n                                name=\"username\" />\r\n                            <Form.Text className=\"text-muted\">\r\n                                Mã số sinh viên để đăng nhập vào trang sinh viên\r\n                        </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Mật khẩu</Form.Label>\r\n                            <Form.Control type=\"password\"\r\n                                onChange={this.changeInputData}\r\n                                value={this.state.password}\r\n                                name=\"password\" />\r\n                            <Form.Text className=\"text-muted\">\r\n                                Mật khẩu để đăng nhập vào trang sinh viên\r\n                        </Form.Text>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.handleHideLogin}>\r\n                        Thoát\r\n                        </Button>\r\n                    <Button variant=\"primary\" onClick={this.submitLoginInfo}>\r\n                        Đăng nhập\r\n                        </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n\r\n        return (\r\n            <>\r\n                <Navbar sticky=\"top\" expand=\"lg\" className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                    <Navbar.Brand as={Link} to=\"/\">DUT Crawler</Navbar.Brand>\r\n                    <MobileAndTablet>\r\n                        <Row>\r\n                            <Button ariant=\"primary\"\r\n                                className=\"mr-2\"\r\n                                onClick={(isExistToken) ? this.props.logout : this.handleShowLogin}>\r\n                                {(isExistToken) ? \"Đăng xuất\" : \"Đăng nhập\"}\r\n                            </Button>\r\n                            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        </Row>\r\n                    </MobileAndTablet>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link as={Link} to=\"/notification\">Thông báo</Nav.Link>\r\n                            <Nav.Link as={Link} to=\"/score\">Điểm</Nav.Link>\r\n                            <Nav.Link as={Link} to=\"/schedule\">Lịch học/thi</Nav.Link>\r\n                        </Nav>\r\n                        <Desktop>\r\n                            <Button ariant=\"primary\"\r\n                                className=\"mr-2\"\r\n                                onClick={(isExistToken) ? this.props.logout : this.handleShowLogin}>\r\n                                {(isExistToken) ? \"Đăng xuất\" : \"Đăng nhập\"}\r\n                            </Button>\r\n                        </Desktop>\r\n                        <Form inline>\r\n                            <InputGroup>\r\n                                <FormControl type=\"text\" placeholder=\"Search\" />\r\n                                <InputGroup.Append>\r\n                                    <Button variant=\"outline-success\">Search</Button>\r\n                                </InputGroup.Append>\r\n                            </InputGroup>\r\n                        </Form>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                {loginModal}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nvar mapStateToProps = (state) => ({\r\n    token: state.loginedData.token\r\n});\r\n\r\nvar mapDispatchToProps = (dispatch) => ({\r\n    login: (username, password) => dispatch(login(username, password)),\r\n    logout: () => dispatch(logout())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport caledarImage from '../assets/images/Calendar.jpg';\r\nimport scoreImage from '../assets/images/score.png';\r\nimport notiImage from '../assets/images/notification.png';\r\nimport '../assets/styles/home.css';\r\nimport { Container, Row, Col, Card } from 'react-bootstrap';\r\n\r\nclass Home extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Row className=\"mt-3 justify-content-center\">\r\n                    <Col sm={4} xs={12} md={3} className=\"m-2\">\r\n                        <Card style={{ width: \"100%\", height: \"100%\" }}>\r\n                            <Card.Img variant=\"top\" src={caledarImage} />\r\n                            <Card.Body>\r\n                                <Card.Title>\r\n                                    Lịch học/thi\r\n                                </Card.Title>\r\n                                <Card.Text>\r\n                                    Hiển thị thông tin lịch học\r\n                                </Card.Text>\r\n                                <Link to=\"/schedule\" className=\"btn btn-primary\">Xem ngay</Link>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm={4} xs={12} md={3} className=\"m-2\">\r\n                        <Card style={{ width: \"100%\", height: \"100%\" }}>\r\n                            <Card.Img variant=\"top\" src={scoreImage} />\r\n                            <Card.Body>\r\n                                <Card.Title>\r\n                                    Điểm\r\n                                </Card.Title>\r\n                                <Card.Text>\r\n                                    Hiển thị điểm chi tiết và tổng kết điểm từng học kỳ\r\n                                </Card.Text>\r\n                                <Link to=\"/score\" className=\"btn btn-primary\">Xem ngay</Link>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm={4} xs={12} md={3} className=\"m-2\">\r\n                        <Card style={{ width: \"100%\", height: \"100%\" }}>\r\n                            <Card.Img variant=\"top\" src={notiImage} />\r\n                            <Card.Body>\r\n                                <Card.Title>\r\n                                    Thông báo\r\n                                </Card.Title>\r\n                                <Card.Text>\r\n                                    Hiển thị thông báo chung của nhà trường và thông báo đến lớp\r\n                                    học phần của giáo viên\r\n                                </Card.Text>\r\n                                <Link to=\"/notification\" className=\"btn btn-primary\">Xem ngay</Link>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm={4} xs={12} md={3} className=\"m-2\">\r\n                        <Card style={{ width: \"100%\", height: \"100%\" }}>\r\n                            <Card.Img variant=\"top\" src={caledarImage} />\r\n                            <Card.Body>\r\n                                <Card.Title>\r\n                                    Lịch học/thi\r\n                            </Card.Title>\r\n                                <Card.Text>\r\n                                    Hiển thị thông tin lịch học\r\n                            </Card.Text>\r\n                                <Link to=\"/schedule\" className=\"btn btn-primary\">Go somewhere</Link>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm={4} xs={12} md={3} className=\"m-2\">\r\n                        <Card style={{ width: \"100%\", height: \"100%\" }}>\r\n                            <Card.Img variant=\"top\" src={scoreImage} />\r\n                            <Card.Body>\r\n                                <Card.Title>\r\n                                    Điểm\r\n                            </Card.Title>\r\n                                <Card.Text>\r\n                                    Hiển thị điểm chi tiết và tổng kết điểm từng học kỳ\r\n                            </Card.Text>\r\n                                <Link to=\"/score\" className=\"btn btn-primary\">Go somewhere</Link>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm={4} xs={12} md={3} className=\"m-2\">\r\n                        <Card style={{ width: \"100%\", height: \"100%\"  }}>\r\n                            <Card.Img variant=\"top\" src={notiImage} />\r\n                            <Card.Body>\r\n                                <Card.Title>\r\n                                    Thông báo\r\n                            </Card.Title>\r\n                                <Card.Text>\r\n                                    Hiển thị thông báo chung của nhà trường và thông báo đến lớp\r\n                                    học phần của giáo viên\r\n                            </Card.Text>\r\n                                <Link to=\"/score\" className=\"btn btn-primary\">Go somewhere</Link>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default Home;","\r\nimport React from 'react';\r\nimport '../assets/styles/notification.css';\r\nimport { connect } from 'react-redux';\r\nimport { loadNotification } from '../actions';\r\nimport { Container, Row, Col, ListGroup, Card, Pagination } from 'react-bootstrap';\r\n\r\nclass Header extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            type: \"general\",\r\n            page: 1,\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    changeSelection = (event) => {\r\n        var target = event.target;\r\n        var type = target.dataset.type;\r\n\r\n        this.props.loadNotification(type, this.state.page);\r\n        this.setState({\r\n            type\r\n        });\r\n    }\r\n    loadFirstPage = () => {\r\n        this.setState({\r\n            page: 1\r\n        });\r\n        this.props.loadNotification(this.state.type, 1);\r\n    }\r\n\r\n    loadLastPage = () => {\r\n        this.setState({\r\n            page: 10\r\n        });\r\n        this.props.loadNotification(this.state.type, 10);\r\n    }\r\n\r\n    loadPrevPage = () => {\r\n        if (this.state.page > 1) {\r\n            this.setState({\r\n                page: this.state.page - 1\r\n            });\r\n            this.props.loadNotification(this.state.type, this.state.page - 1);\r\n        }\r\n    }\r\n\r\n    loadNextPage = () => {\r\n        this.setState({\r\n            page: this.state.page + 1\r\n        });\r\n        this.props.loadNotification(this.state.type, this.state.page + 1);\r\n    }\r\n\r\n    render() {\r\n\r\n        let listNotification = this.props.notifications.map((item, index) => {\r\n            return (\r\n                <div key={index} className=\"card\">\r\n                    <div className=\"card-header \">\r\n                        Ngày {item.date}\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{item.title}</h5>\r\n                        <p className=\"card-text\" dangerouslySetInnerHTML={{ __html: item.content }}></p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <Container fluid className=\"mt-3\">\r\n                <Row>\r\n                    <Col sm={3}>\r\n                        <ListGroup>\r\n                            <ListGroup.Item action active={(this.state.type === \"general\") ? true : false}\r\n                                className={\" text-center\"}\r\n                                data-type=\"general\"\r\n                                onClick={this.changeSelection}>\r\n                                Thông báo chung\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item action active={(this.state.type === \"class\") ? true : false}\r\n                                className={\" text-center\"}\r\n                                data-type=\"class\"\r\n                                onClick={this.changeSelection}>\r\n                                Thông báo đến lớp học phần\r\n                            </ListGroup.Item>\r\n                            <Card className=\"ntnt-card\">\r\n                                <Card.Header className=\"card-header bg-primary text-white text-center\">\r\n                                    Bộ lọc\r\n                                    </Card.Header>\r\n                                <Card.Body className=\"card-body\">\r\n                                    <Row className=\"flex-column align-items-center\">\r\n                                        <p>Trang</p>\r\n                                        <Pagination className=\"pagination justify-content-center\">\r\n                                            <Pagination.First onClick={this.loadFirstPage} />\r\n                                            <Pagination.Prev onClick={this.loadPrevPage} />\r\n                                            <Pagination.Item active>{this.state.page}</Pagination.Item>\r\n                                            <Pagination.Next onClick={this.loadNextPage} />\r\n                                            <Pagination.Last onClick={this.loadLastPage} />\r\n                                        </Pagination>\r\n                                    </Row>\r\n                                    <Row className=\"flex-column align-items-center\">\r\n                                        <p>Ngày</p>\r\n                                        <input type=\"date\" className=\"form-control\" pattern=\"\\d{1,2}/\\d{1,2}/\\d{4}\" />\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <div className=\"col-sm-9\">\r\n                        <div className=\"ntnt-scroll\" style={{ height: \"calc(100vh - 6rem)\" }}>\r\n                            {listNotification}\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadNotification(this.state.type, this.state.page);\r\n    }\r\n}\r\n\r\nvar mapStateToProp = (state) => {\r\n    return {\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nvar mapDispatchToProp = (dispatch) => {\r\n    return {\r\n        loadNotification: (type, page) => dispatch(loadNotification(type, page))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProp, mapDispatchToProp)(Header);","\r\nimport React from 'react';\r\nimport { loadScore } from '../actions';\r\nimport { connect } from 'react-redux';\r\nimport { Table, Row, Container, DropdownButton, Dropdown } from 'react-bootstrap';\r\n\r\nclass Score extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            curSemester: this.props.semester[this.props.semester.length - 1]\r\n        }\r\n    }\r\n\r\n    selectSemester = (event) => {\r\n        this.setState({\r\n            curSemester: event.target.innerText\r\n        });\r\n    }\r\n\r\n    getSemesterCode = (curSemester) => {\r\n        let index = curSemester.indexOf(\"/\");\r\n        let prefixType = curSemester.substring(index + 3, index + 5);\r\n        let subfix = curSemester.substring(0, index);\r\n        let subfixType = ((subfix.indexOf(\"Hè\") !== -1) ? \"21\" : subfix + \"0\");\r\n\r\n        return prefixType + subfixType;\r\n    }\r\n\r\n    renderListDetailedScores = () => {\r\n\r\n        let curSemesterCode = this.getSemesterCode(this.state.curSemester);\r\n        return this.props.score.detailedScores\r\n            .filter((score) => {\r\n                return score.code.indexOf(`.${curSemesterCode}.`) > -1\r\n            })\r\n            .map((score, index) => {\r\n                return (\r\n                    <tr key={index}>\r\n                        <td>{index}</td>\r\n                        <td>{score.code}</td>\r\n                        <td>{score.subject}</td>\r\n                        <td>{score.credit}</td>\r\n                        <td>{score.score1}</td>\r\n                        <td>{score.score2}</td>\r\n                        <td>{score.score3}</td>\r\n                        <td>{score.score4}</td>\r\n                        <td>{score.score5}</td>\r\n                        <td>{score.score6}</td>\r\n                        <td>{score.score7}</td>\r\n                        <td>{score.score8}</td>\r\n                        <td>{score.score9}</td>\r\n                    </tr>\r\n                )\r\n            });\r\n    }\r\n\r\n    renderTotalScore = () => {\r\n\r\n        let gettedCredit = 0;\r\n        let gettedScore1 = 0;\r\n        for (let el of this.props.score.totalScores) {\r\n            gettedCredit += el.totalCredit;\r\n            gettedScore1 += el.score1;\r\n            if (el.semester === this.state.curSemester)\r\n                break;\r\n        }\r\n\r\n        return this.props.score.totalScores.filter((el) => {\r\n            return el.semester === this.state.curSemester;\r\n        }).map((el, index) => {\r\n            return (\r\n                <tr key={index}>\r\n                    <td>{index}</td>\r\n                    <td>{el.totalCredit}</td>\r\n                    <td>{el.restCredit}</td>\r\n                    <td>{el.score1}</td>\r\n                    <td>{el.score2}</td>\r\n                    <td>{el.score3}</td>\r\n                    <td>{el.resultType}</td>\r\n                    <td>{el.activityScore}</td>\r\n                    <td>{gettedCredit}</td>\r\n                    <td>{gettedScore1}</td>\r\n                </tr>\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let listSemester = this.props.semester.map((el) => {\r\n            return (\r\n                <Dropdown.Item key={el}\r\n                    onClick={this.selectSemester}\r\n                    active={this.state.curSemester.trim() === el.trim() ? true : false}>{el}</Dropdown.Item>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <Container fluid className=\"p-5\">\r\n                <Row className=\"justify-content-center\">\r\n                    <DropdownButton variant=\"primary\" title={this.state.curSemester}>\r\n                        {listSemester}\r\n                    </DropdownButton>\r\n                </Row>\r\n                <Row className=\"mt-3 justify-content-center\">\r\n                    <h3>Chi tiết</h3>\r\n                    <Table hover responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Mã lớp HP</th>\r\n                                <th scope=\"col\">Tên lớp HP</th>\r\n                                <th scope=\"col\">Số TC</th>\r\n                                <th scope=\"col\">Bài tập</th>\r\n                                <th scope=\"col\">Cuối kì</th>\r\n                                <th scope=\"col\">Đồ án</th>\r\n                                <th scope=\"col\">Giữa kì</th>\r\n                                <th scope=\"col\">Lý thuyết</th>\r\n                                <th scope=\"col\">Thực hành</th>\r\n                                <th scope=\"col\">Thang 10</th>\r\n                                <th scope=\"col\">Thang 4</th>\r\n                                <th scope=\"col\">Chữ</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.renderListDetailedScores()}\r\n                        </tbody>\r\n                    </Table>\r\n                </Row>\r\n                <Row className=\"mt-3 justify-content-center\">\r\n                    <h3>Tổng kết</h3>\r\n                    <Table hover responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Tổng số tín chỉ</th>\r\n                                <th scope=\"col\">Số tín chỉ học lại</th>\r\n                                <th scope=\"col\">Điểm TBC học kỳ T4</th>\r\n                                <th scope=\"col\">Điểm TBC học bổng</th>\r\n                                <th scope=\"col\">Điểm TBC học kỳ T10</th>\r\n                                <th scope=\"col\">Xếp loại học tập</th>\r\n                                <th scope=\"col\">Điểm rèn luyện</th>\r\n                                <th scope=\"col\">Số tín chỉ tích lũy</th>\r\n                                <th scope=\"col\">Điểm TBC tích lũy T4</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.renderTotalScore()}\r\n                        </tbody>\r\n                    </Table>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadScore();\r\n    }\r\n}\r\n\r\nvar mapStateToProps = (state) => {\r\n    return {\r\n        score: state.score,\r\n        token: state.loginedData.token,\r\n        semester: state.loginedData.semester\r\n    }\r\n}\r\n\r\nvar mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loadScore: (token) => dispatch(loadScore(token))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Score);","\r\nimport React from 'react';\r\nimport { Container, Row, DropdownButton, Dropdown, Table } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { loadSchedule } from '../actions';\r\n\r\nclass Schedule extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.semester) {\r\n            this.state = {\r\n                curSemester: this.props.semester[this.props.semester.length - 1]\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    selectSemester = (event) => {\r\n        this.setState({\r\n            curSemester: event.target.innerText\r\n        });\r\n        this.loadSchedule(event.target.innerText);\r\n    }\r\n\r\n    getSemesterCode = (curSemester) => {\r\n        let index = curSemester.indexOf(\"/\");\r\n        let prefixType = curSemester.substring(index + 3, index + 5);\r\n        let subfix = curSemester.substring(0, index);\r\n        let subfixType = ((subfix.indexOf(\"Hè\") !== -1) ? \"21\" : subfix + \"0\");\r\n\r\n        return prefixType + subfixType;\r\n    }\r\n\r\n    loadSchedule = (curSemester) => {\r\n        this.props.loadSchedule(this.getSemesterCode(curSemester));\r\n    }\r\n\r\n    render() {\r\n        let listSemester = this.props.semester.map((el) => {\r\n            return (\r\n                <Dropdown.Item key={el}\r\n                    onClick={this.selectSemester}\r\n                    active={this.state.curSemester.trim() === el.trim() ? true : false}>{el}</Dropdown.Item>\r\n            );\r\n        });\r\n\r\n        let totalTuition = 0;\r\n        let totalCredit = 0;\r\n        let listSchedule = this.props.schedule.map((el, index) => {\r\n            totalCredit += (el.credit !== -1) ? el.credit : 0;\r\n            totalTuition += (el.tuition !== -1) ? el.tuition : 0;\r\n            return (\r\n                <tr key={index}>\r\n                    <td>{el.code}</td>\r\n                    <td>{el.name}</td>\r\n                    <td>{el.credit}</td>\r\n                    <td>{el.clc ? \"YES\" : \"\"}</td>\r\n                    <td>{el.lecturer}</td>\r\n                    <td>{el.schedule}</td>\r\n                    <td>{el.studyingWeek}</td>\r\n                </tr>\r\n            )\r\n        });\r\n        return (\r\n            <Container fluid className=\"p-5\">\r\n                <Row className=\"justify-content-center\">\r\n                    <DropdownButton variant=\"primary\" title={this.state.curSemester}>\r\n                        {listSemester}\r\n                    </DropdownButton>\r\n                </Row>\r\n                <Row className=\"mt-3 justify-content-center\">\r\n                    <Table hover responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Mã lớp HP</th>\r\n                                <th scope=\"col\">Tên lớp HP</th>\r\n                                <th scope=\"col\">Số TC</th>\r\n                                <th scope=\"col\">CLC</th>\r\n                                <th scope=\"col\">Giảng viên</th>\r\n                                <th scope=\"col\">Thời khóa biểu</th>\r\n                                <th scope=\"col\">Tuần học</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {listSchedule}\r\n                        </tbody>\r\n                        <tfoot>\r\n                            <tr>\r\n                                <th colSpan={2} className=\"text-right\">\r\n                                </th>\r\n                                <th>\r\n                                    {totalCredit}\r\n                                </th>\r\n                                <th colSpan={5}>\r\n                                </th>\r\n                            </tr>\r\n                        </tfoot>\r\n                    </Table>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadSchedule(this.state.curSemester);\r\n    }\r\n}\r\n\r\nvar mapStateToProps = (state) => {\r\n    return {\r\n        schedule: state.schedule,\r\n        token: state.loginedData.token,\r\n        semester: state.loginedData.semester\r\n    }\r\n}\r\n\r\nvar mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loadSchedule: (type) => dispatch(loadSchedule(type))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule);","\r\nimport React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nclass Page403 extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <h3 className=\"text-center mt-5\">Vui lòng đăng nhập để sử dụng chức năng này</h3>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default Page403;","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { usePromiseTracker } from 'react-promise-tracker';\r\nimport '../assets/styles/spinner.css'\r\n\r\nexport const CustomSpinner = () => {\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n\r\n    return (\r\n        promiseInProgress &&\r\n        <div className=\"ntnt-spinner-wrapper\">\r\n            <div className=\"ntnt-spinner\">\r\n                <Spinner animation=\"border\" variant=\"primary\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// export default CustomSpinner;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Notification from './components/Notification';\nimport Score from './components/Score';\nimport Schedule from './components/Schedule';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Page403 from './components/Page403';\nimport { loadDataFromLocal } from './actions';\nimport {CustomSpinner} from './components/Spinner';\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div>\n\t\t\t\t\t<Header />\n\n\t\t\t\t\t<CustomSpinner />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t<Home />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/notification\">\n\t\t\t\t\t\t\t<Notification />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/score\" >\n\t\t\t\t\t\t\t{(this.props.token !== \"\") ? <Score /> : <Page403 />}\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/schedule\">\n\t\t\t\t\t\t\t{(this.props.token !== \"\") ? <Schedule /> : <Page403 />}\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.loadDataFromLocal();\n\t}\n}\nvar mapStateToProps = (state) => ({\n\ttoken: state.loginedData.token\n});\n\nvar mapDispatchToProps = (dispatch) => ({\n\tloadDataFromLocal: () => dispatch(loadDataFromLocal())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const {FETCH_NOTIFICATION } = require(\"../const/ActionType\");\r\n\r\nvar initState = [];\r\n\r\nexport const notification = (state = initState, action) => {\r\n\r\n    let notifications = [...state];\r\n\r\n    switch(action.type){\r\n        case FETCH_NOTIFICATION:\r\n            notifications = action.data;\r\n            return notifications;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { FETCH_SCORE } from \"../const/ActionType\";\r\n\r\nvar initState = {\r\n    detailedScores: [],\r\n    totalScores: []\r\n};\r\n\r\nexport const score = (state = initState, action) => {\r\n\r\n    let score = {...state};\r\n    switch (action.type) {\r\n        case FETCH_SCORE:\r\n            let detailedScores = action.data.scores;\r\n            let totalScores = action.data.totalScores;\r\n            for (let s of detailedScores) {\r\n                for(let key in s){\r\n                    s[key] = (s[key] === -1)?\"\":s[key]; \r\n                }\r\n            }\r\n            for (let s of totalScores) {\r\n                for(let key in s){\r\n                    s[key] = (s[key] === -1)?\"\":s[key]; \r\n                }\r\n            }\r\n            score = {\r\n                detailedScores,\r\n                totalScores\r\n            }\r\n            return score;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { FETCH_SCHEDULE } from \"../const/ActionType\";\r\n\r\nvar initState = []\r\nexport const schedule = (state = initState, action) => {\r\n\r\n    let schedule = [...state];\r\n\r\n    switch (action.type) {\r\n        case FETCH_SCHEDULE:\r\n            schedule = action.data;\r\n        return schedule;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { FETCH_LOGINED_DATA, CLEAR_LOGINED_DATA } from '../const/ActionType';\r\n\r\nvar initState = {\r\n    token: null,\r\n    class: null\r\n};\r\n\r\nexport const login = (state = initState, action) => {\r\n\r\n    let loginedData = { ...state };\r\n    switch (action.type) {\r\n        case FETCH_LOGINED_DATA:\r\n            loginedData.token = action.data.token;\r\n            loginedData.class = action.data.additionalData;\r\n            loginedData.semester = renderListSemester(loginedData.class);\r\n            localStorage.setItem(\"token\", loginedData.token);\r\n            localStorage.setItem(\"class\", loginedData.class);\r\n            return loginedData;\r\n        case CLEAR_LOGINED_DATA:\r\n            loginedData.token = \"\";\r\n            loginedData.class = \"\";\r\n            localStorage.setItem(\"token\", \"\");\r\n            localStorage.setItem(\"class\", \"\");\r\n            return loginedData;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction renderListSemester(userClass) {\r\n    if (userClass == null) {\r\n        return null;\r\n    }\r\n\r\n    let startYear = +(\"20\" + userClass.substring(0, 2));\r\n    let endYear = startYear + 1;\r\n    let currentDate = new Date();\r\n    let currentYear = currentDate.getFullYear();\r\n    let semester = []\r\n\r\n    while (+endYear <= currentYear + 1) {\r\n        semester.push(`1/${startYear}-${endYear}`);\r\n        semester.push(`2/${startYear}-${endYear}`);\r\n        semester.push(`Hè/${startYear}-${endYear}`);\r\n        startYear += 1;\r\n        endYear += 1;\r\n    }\r\n\r\n    if(currentYear < endYear){\r\n        semester.pop();\r\n        semester.pop();\r\n    }else if(currentDate.getMonth() < 7){\r\n        semester.pop();\r\n    }\r\n    return semester;\r\n}\r\n","import { START_LOADING, STOP_LOADING } from '../const/ActionType';\r\n\r\nvar initState = false;\r\nexport const loading = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case START_LOADING:\r\n            return true;\r\n        case STOP_LOADING:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { notification } from \"./notification\";\r\nimport { score } from \"./score\";\r\nimport { schedule } from \"./schedule\";\r\nimport { login } from \"./login\";\r\nimport { loading } from \"./loading\";\r\n\r\nexport default combineReducers({\r\n    notifications: notification,\r\n    score,\r\n    schedule,\r\n    loginedData: login,\r\n    isLoading: loading\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers'\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nvar store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Calendar.cfecb6b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/score.c4d1e3a9.png\";","module.exports = __webpack_public_path__ + \"static/media/notification.5e1d61e5.png\";","export const GET_NOTIFICATION = \"get_notification\";\r\nexport const FETCH_NOTIFICATION = 'fetch_notification';\r\nexport const FETCH_SCORE = 'fetch_score';\r\nexport const FETCH_SCHEDULE = 'fetch_schedule';\r\nexport const FETCH_LOGINED_DATA = 'fetch_logined_data';\r\nexport const CLEAR_LOGINED_DATA = 'clear_logined_data';\r\nexport const START_LOADING = 'start_loading';\r\nexport const STOP_LOADING = 'stop_loading';\r\nexport const SERVER_DOMAIN = 'http://localhost:5000'"],"sourceRoot":""}