{"version":3,"sources":["components/TaskHeader.js","components/TaskSideBar.js","components/TaskActionBar.js","components/TaskListRow.js","components/TaskList.js","App.js","serviceWorker.js","index.js"],"names":["TaskHeader","className","React","Component","TaskSideBar","submitForm","event","preventDefault","id","props","editingTask","addTask","name","state","status","clearForm","setState","hideSideBar","changeData","target","value","this","nextProps","onClick","onSubmit","htmlFor","type","placeholder","onChange","TaskActionBar","showSideBar","search","sort","listSortTypes","typeKey","dataset","key","isActive","sortType","1","2","3","dropdownItems","item","data-type","push","data-toggle","TaskListRow","changeStatus","changeTaskStatus","task","removeTask","editTask","index","renderStatusTag","TaskList","changeSearchValue","filterName","filterStatus","tasks","searchValue","listRows","filter","indexOf","map","App","getIndexOf","i","length","curStatus","localStorage","setItem","JSON","stringify","splice","console","log","task1","task2","localTasks","parse","getItem","isDisplaySideBar","bind","saveTask","curDate","Date","getTime","Math","floor","random","toString","getId","newTask","forEach","staus","generateId","sideBar","noshade","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.925494b7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass TaskHeader extends React.Component {\r\n    render() {\r\n        return (\r\n            <h2 className=\"text-center\">\r\n                Quản lý công việc\r\n            </h2>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskHeader;","import React from 'react';\r\n\r\nclass TaskSideBar extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            name: \"\",\r\n            status: 0\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.props.editingTask != null)\r\n            this.setState({\r\n                id: this.props.editingTask.id,\r\n                name: this.props.editingTask.name,\r\n                status: this.props.editingTask.status\r\n            });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.editingTask === null && this.state.id !== '') {\r\n            this.setState({\r\n                id: \"\",\r\n                name: \"\",\r\n                status: 0\r\n            });\r\n        } else if (nextProps.editingTask !== null && this.state.id === '') {\r\n            this.setState({\r\n                id: nextProps.editingTask.id,\r\n                name: nextProps.editingTask.name,\r\n                status: nextProps.editingTask.status\r\n            });\r\n        }\r\n    }\r\n\r\n    submitForm = (event) => {\r\n        event.preventDefault();\r\n        let id = (this.props.editingTask == null) ? null : this.props.editingTask.id;\r\n        this.props.addTask({\r\n            id: id,\r\n            name: this.state.name,\r\n            status: this.state.status\r\n        });\r\n\r\n        this.clearForm();\r\n    }\r\n\r\n    clearForm = () => {\r\n        this.setState({\r\n            name: \"\",\r\n            status: 0\r\n        });\r\n        this.props.hideSideBar();\r\n    }\r\n\r\n    changeData = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        if (name === \"status\") value = +value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card mb-2\">\r\n                <div className=\"card-header\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <p>{(this.props.editingTask == null) ? 'Thêm công việc' : 'Sửa công việc'}</p>\r\n                        <p onClick={this.props.hideSideBar}><i className=\"fa fa-window-close\"> </i></p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.submitForm}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"taskName\">Tên công việc</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                className=\"form-control\"\r\n                                id=\"taskName\"\r\n                                placeholder=\"Công việc 1\"\r\n                                onChange={this.changeData}\r\n                                value={this.state.name} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"taskStatus\">Trạng thái</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"taskStatus\"\r\n                                name=\"status\"\r\n                                value={this.state.status}\r\n                                onChange={this.changeData}>\r\n                                <option value={0}>Chọn trạng thái...</option>\r\n                                <option value={1}>Chưa kích hoạt</option>\r\n                                <option value={2}>Kích hoạt</option>\r\n                                <option value={3}>Hoàn thành</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group d-flex justify-content-around flex-wrap\">\r\n                            <button type=\"submit\" className=\"btn btn-success mb-3\" >\r\n                                Lưu lại <i className=\"fas fa-save\"></i>\r\n                            </button>\r\n                            <button type=\"button\"\r\n                                className=\"btn btn-danger mb-3\"\r\n                                onClick={this.clearForm}>Hủy bỏ <i className=\"fas fa-minus-circle\"></i></button>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskSideBar;","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\n\r\nclass TaskActionBar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: '',\r\n            sortType: 1,\r\n            listSortTypes: {\r\n                1: {\r\n                    name: 'A-Z',\r\n                    isActive: true\r\n                },\r\n                2: {\r\n                    name: 'Z-A',\r\n                    isActive: false\r\n                },\r\n                3: {\r\n                    name: 'Trạng thái',\r\n                    isActive: false\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    showSideBar = () => {\r\n        this.props.showSideBar(null);\r\n    }\r\n\r\n    changeData = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    search = () => {\r\n        this.props.search(this.state.value);\r\n    }\r\n\r\n    sort = (event) => {\r\n        let listSortTypes = this.state.listSortTypes;\r\n        let typeKey = event.target.dataset.type;\r\n        for(let key in listSortTypes){\r\n            listSortTypes[key].isActive = false;\r\n        }\r\n        listSortTypes[typeKey].isActive = true;\r\n\r\n        this.setState({\r\n            listSortTypes: listSortTypes\r\n        });\r\n\r\n        this.props.sort(typeKey);\r\n    }\r\n\r\n    render() {\r\n\r\n        var { listSortTypes } = this.state;\r\n        var dropdownItems = [];\r\n\r\n        for (let key in listSortTypes) {\r\n            let value = listSortTypes[key];\r\n            let className = `dropdown-item ${value.isActive ? 'active' : ''}`;\r\n            let item = (<a key={key} className={className} data-type={key} onClick={this.sort}>{value.name}</a>);\r\n            dropdownItems.push(item);\r\n        }\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                        <button className=\"btn btn-primary\" onClick={this.showSideBar}>Thêm công việc</button>\r\n                    </div>\r\n                </div>\r\n                <form className=\"row mt-3\">\r\n                    <div className=\"col-sm-9\">\r\n                        <div className=\"input-group mb-3\">\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Something clever..\"\r\n                                name=\"value\"\r\n                                value={this.state.value}\r\n                                onChange={this.changeData} />\r\n                            <div className=\"input-group-append\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\"\r\n                                    onClick={this.search}>Tìm kiếm</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-3\">\r\n                        <div className=\"dropdown\">\r\n                            <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\">\r\n                                Sắp xếp\r\n                        </button>\r\n                            <div className=\"dropdown-menu\">\r\n                                {dropdownItems}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskActionBar;","import React from 'react';\r\n\r\nclass TaskListRow extends React.Component {\r\n\r\n    changeStatus = ()=>{\r\n        this.props.changeTaskStatus(this.props.task);\r\n    }\r\n    \r\n    removeTask = ()=>{\r\n        this.props.removeTask(this.props.task);\r\n    }\r\n\r\n    editTask = ()=>{\r\n        this.props.showSideBar(this.props.task);\r\n    }\r\n\r\n    renderStatusTag(status) {\r\n        switch (status) {\r\n            case 1:\r\n                return (<span className=\"badge badge-warning\" onClick={this.changeStatus}>Chưa kích hoạt</span>);\r\n            case 2:\r\n                return (<span className=\"badge badge-success\" onClick={this.changeStatus}>Kích hoạt</span>);\r\n            case 3:\r\n                return (<span className=\"badge badge-success\" onClick={this.changeStatus}>Hoàn thành</span>);\r\n            default:\r\n                return (<span className=\"badge badge-success\" onClick={this.changeStatus}>Không xác định</span>);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td className=\"align-middle\">{this.props.index + 1}</td>\r\n                <td className=\"align-middle\">{this.props.task.name}</td>\r\n                <td className=\"text-center align-middle\">\r\n                    {this.renderStatusTag(this.props.task.status)}\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <button className=\"btn btn-default mr-2\" onClick={this.editTask}><i className=\"fa fa-edit\"></i> Sửa</button>\r\n                    <button className=\"btn btn-danger\" onClick={this.removeTask}><i className=\"fa fa-trash\"> </i> Xóa</button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskListRow;","import React from 'react';\r\nimport TaskListRow from './TaskListRow';\r\n\r\nclass TaskList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filterName: '',\r\n            filterStatus: 0\r\n        }\r\n    }\r\n\r\n    changeSearchValue = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        if (name === \"filterStatus\") value = +value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        var { tasks, searchValue } = this.props;\r\n        var listRows = tasks.filter((task) => {\r\n            if (\r\n                task.name.indexOf(this.state.filterName) >= 0\r\n                && (this.state.filterStatus === 0 || this.state.filterStatus === task.status)\r\n                && task.name.indexOf(searchValue) >= 0\r\n            ) return true;\r\n            return false;\r\n        }).map((task, index) => {\r\n            return (<TaskListRow key={index} task={task} index={index}\r\n                changeTaskStatus={this.props.changeTaskStatus}\r\n                removeTask={this.props.removeTask}\r\n                showSideBar={this.props.showSideBar} />);\r\n        });\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>STT</th>\r\n                                <th>Tên công việc</th>\r\n                                <th>Trạng thái</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th></th>\r\n                                <td>\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"\"\r\n                                        name=\"filterName\"\r\n                                        value={this.state.filterName}\r\n                                        onChange={this.changeSearchValue} />\r\n                                </td>\r\n                                <td>\r\n                                    <select className=\"form-control\" value={this.state.filterStatus} name=\"filterStatus\"\r\n                                        onChange={this.changeSearchValue}>\r\n                                        <option value={0}>Choose...</option>\r\n                                        <option value={1}>Chưa kích hoạt</option>\r\n                                        <option value={2}>Kích hoạt</option>\r\n                                        <option value={3}>Hoàn thành</option>\r\n                                    </select>\r\n                                </td>\r\n                                <td></td>\r\n                            </tr>\r\n                            {listRows}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskList;","import React from 'react';\nimport './App.css';\nimport TaskHeader from './components/TaskHeader';\nimport TaskSideBar from './components/TaskSideBar';\nimport TaskActionBar from './components/TaskActionBar';\nimport TaskList from './components/TaskList';\n\nclass App extends React.Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tlet localTasks = JSON.parse(localStorage.getItem(\"tasks\"));\n\t\tlocalTasks = (localTasks == null)?[]:localTasks;\n\t\tlocalStorage.setItem('tasks', JSON.stringify(localTasks));\n\n\t\tthis.state = {\n\t\t\ttasks: localTasks,\n\t\t\tisDisplaySideBar: false,\n\t\t\teditingTask: null,\n\t\t\tsearchValue: '',\n\t\t\tsortType: 1\n\t\t};\n\n\t\tthis.showSideBar = this.showSideBar.bind(this);\n\t\tthis.hideSideBar = this.hideSideBar.bind(this);\n\t\tthis.saveTask = this.saveTask.bind(this);\n\n\t}\n\n\tgetId() {\n\t\tvar curDate = new Date().getTime();\n\t\tvar id = (Math.floor((1 + Math.random()) * 100000) + curDate).toString(16);\n\t\treturn id;\n\t}\n\n\tgetIndexOf = (task) => {\n\t\tlet { tasks } = this.state;\n\t\tfor (let i = 0; i < tasks.length; i++) {\n\t\t\tif (tasks[i].id === task.id) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\n\tgenerateId() {\n\t\treturn this.getId() + '-' + this.getId();\n\t}\n\n\tshowSideBar(task) {\n\t\tthis.setState({\n\t\t\tisDisplaySideBar: true,\n\t\t\teditingTask: task\n\t\t});\n\t}\n\n\thideSideBar() {\n\t\tthis.setState({\n\t\t\tisDisplaySideBar: false\n\t\t})\n\t}\n\n\tsaveTask(newTask) {\n\t\tvar { tasks } = this.state;\n\n\t\tif (!newTask.id) {\n\t\t\tnewTask.id = this.generateId();\n\t\t\ttasks.push(newTask);\n\t\t}\n\t\telse {\n\t\t\ttasks.forEach(task => {\n\t\t\t\tif (task.id === newTask.id) {\n\t\t\t\t\ttask.name = newTask.name;\n\t\t\t\t\ttask.staus = newTask.status;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\n\t\tthis.setState({\n\t\t\ttasks: tasks\n\t\t});\n\n\t\tlocalStorage.setItem(\"tasks\", JSON.stringify(tasks));\n\n\t}\n\n\tchangeTaskStatus = (task) => {\n\t\tlet { tasks } = this.state;\n\t\tlet index = this.getIndexOf(task);\n\t\tlet curStatus = tasks[index].status;\n\t\tif (curStatus < 3) {\n\t\t\tcurStatus++;\n\t\t} else {\n\t\t\tcurStatus = 1;\n\t\t}\n\t\ttasks[index].status = curStatus;\n\n\t\tthis.setState({\n\t\t\ttasks: tasks\n\t\t});\n\n\t\tlocalStorage.setItem(\"tasks\", JSON.stringify(tasks));\n\t}\n\n\tremoveTask = (task) => {\n\t\tlet { tasks } = this.state;\n\t\tlet index = this.getIndexOf(task);\n\t\ttasks.splice(index, 1);\n\n\t\tthis.setState({\n\t\t\ttasks: tasks\n\t\t});\n\n\t\tlocalStorage.setItem(\"tasks\", JSON.stringify(tasks));\n\t}\n\n\tsearch = (value) => {\n\t\tthis.setState({\n\t\t\tsearchValue: value\n\t\t});\n\t}\n\n\tsort = (type) => {\n\t\tlet { tasks } = this.state;\n\t\tconsole.log('Before sort:' ,tasks);\n\t\ttype = +type;\n\t\tswitch (type) {\n\t\t\tcase 1:\n\t\t\t\ttasks.sort((task1, task2) => {\n\t\t\t\t\tif(task1.name > task2.name){\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if(task1.name < task2.name){\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t});\t\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\ttasks.sort((task1, task2) => {\n\t\t\t\t\tif(task1.name > task2.name){\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\telse if(task1.name < task2.name){\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\ttasks.sort((task1, task2) => {\n\t\t\t\t\tif(task1.status > task2.status){\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if(task1.status < task2.status){\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tbreak;\t\n\t\t\tdefault:\n\t\t\t\ttasks = tasks.sort((task1, task2) => {\n\t\t\t\t\treturn task1.name <= task2.name\n\t\t\t\t});\n\t\t}\n\n\t\tthis.setState({\n\t\t\ttasks: tasks\n\t\t});\n\t}\n\n\trender() {\n\n\t\tvar sideBar = (this.state.isDisplaySideBar) ?\n\t\t\t(\n\t\t\t\t<div className=\"col-sm-4\">\n\t\t\t\t\t<TaskSideBar editingTask={this.state.editingTask} hideSideBar={this.hideSideBar} addTask={this.saveTask} />\n\t\t\t\t</div>\n\t\t\t) : '';\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row justify-content-center mt-3\">\n\t\t\t\t\t<TaskHeader />\n\t\t\t\t</div>\n\t\t\t\t<hr noshade=\"noshade\"></hr>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{sideBar}\n\t\t\t\t\t<div className={this.state.isDisplaySideBar ? \"col-sm-8\" : \"col-sm-12\"}>\n\t\t\t\t\t\t<TaskActionBar showSideBar={this.showSideBar} search={this.search} sort={this.sort} />\n\t\t\t\t\t\t<TaskList tasks={this.state.tasks}\n\t\t\t\t\t\t\tsearchValue={this.state.searchValue}\n\t\t\t\t\t\t\tchangeTaskStatus={this.changeTaskStatus}\n\t\t\t\t\t\t\tremoveTask={this.removeTask}\n\t\t\t\t\t\t\tshowSideBar={this.showSideBar} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}